{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImprtance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","Footer","style","color","fontStyle","fontSize","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4LAceA,EAZF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAE7B,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAmCC,QCRzCK,EAAU,uDAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD9BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKd,UAAU,QAAf,SACKc,KCsGEC,EAzGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAkChBC,qBARa,WACXC,QAAQC,IAAI,UACZC,IAEGtB,MAAK,SAAAuB,GACJX,EAASW,QAGC,IAEhBH,QAAQC,IAAI,SAAUV,EAAMa,OAAQ,SAEpC,IAoBMC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,mEAKAC,EAAcf,EAChBJ,EACAA,EAAMoB,QAAO,SAAAzC,GAAI,OAAuB,IAAnBA,EAAKG,aAE9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAce,QAASS,IACvB,8BACE,yBAAQrB,QAAS,kBAAMoB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGe,EAAYE,KAAI,SAAC1C,EAAM2C,GAAP,OACf,cAAC,EAAD,CACE3C,KAAMA,EACNC,gBAAiB,kBAnFH,SAACc,GACvB,IAAMf,EAAOqB,EAAMuB,MAAK,SAAAC,GAAC,OAAIA,EAAE9B,KAAOA,KAChC+B,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD6B,EACUjB,EAAI+B,GACXpC,MAAK,SAAAqC,GACJzB,EAASD,EAAMqB,KAAI,SAAA1C,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO+C,SAEpDC,OAAM,SAAAC,GACLrB,EAAgB,SAAD,OACJ5B,EAAKK,QADD,sCAGf6C,YAAW,WACTtB,EAAgB,QACf,KACHN,EAASD,EAAMoB,QAAO,SAAAI,GAAC,OAAIA,EAAE9B,IAAMA,SAmERd,CAAgBD,EAAKe,MAFnC4B,QAMf,uBAAMQ,SAvDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAASkB,EACTgC,KAAM,IAAIC,KACVrD,UAAWsD,KAAKC,SAAW,IAE7B1B,EACUsB,GACP5C,MAAK,SAAAqC,GACJzB,EAASD,EAAMsC,OAAOZ,IACtBvB,EAAW,QA4Cb,UACE,uBACEoC,MAAOrC,EACPsC,SA3CiB,SAACT,GACxBtB,QAAQC,IAAIqB,EAAMU,OAAOF,OACzBpC,EAAW4B,EAAMU,OAAOF,UA2CpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC5B,EAAD,Q,MCrGN6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.09551cad.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImprtance }) => {\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImprtance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = 'https://floating-ocean-58718.herokuapp.com/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const toggleImprtance = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id != id))\n      })\n  }\n\n  const hook = () => {\n    console.log('effect')\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }\n  useEffect(hook, [])\n\n  console.log('render', notes.length, 'notes')\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5,\n    }\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Szymon Wozniak 2021</em>\n      </div>\n    )\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note key={i}\n            note={note}\n            toggleImprtance={() => toggleImprtance(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}